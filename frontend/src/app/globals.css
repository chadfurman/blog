@tailwind base;

@layer base {
    h1 {
        color: var(--highlight);
        @apply font-normal;
        @apply leading-3;
        @apply text-2xl;
        @apply mt-8;
        @apply mb-4;
        @apply tracking-widest;
    }

    h2 {
        color: var(--highlight);
        @apply font-normal;
        @apply leading-3;
        @apply text-xl;
        @apply mt-8;
        @apply mb-4;
    }

    h3 {
        color: var(--highlight);
        @apply font-normal;
        @apply leading-3;
        @apply text-base;
        @apply font-normal;
        @apply mt-8;
        @apply mb-4;
    }

    h4 {
        color: var(--highlight);
        @apply font-normal;
        @apply leading-3;
        @apply text-base;
        @apply font-light;
        @apply mt-8;
        @apply mb-4;
    }

    h5 {
        color: var(--highlight);
        @apply font-normal;
        @apply leading-3;
        @apply text-base;
        @apply font-light;
        @apply italic;
        @apply mt-8;
        @apply mb-4;
    }

    h6 {
        color: var(--highlight);
        @apply font-normal;
        @apply leading-3;
        @apply text-base;
        @apply font-light;
        @apply italic;
        @apply opacity-90;
        @apply mt-8;
        @apply mb-4;
    }
}

@tailwind components;
@tailwind utilities;

:root {
    --background: 3 7 18; /* theme('colors.gray.950'); */
    --foreground: 244 244 245; /* theme('colors.zinc.100'); */
    --lowlight: 99 102 241; /* theme('colors.indigo.500'); */
    --highlight: 244 244 245; /* theme('colors.zinc.100'); */
    --header-font-weight: 500;
    --body-font-weight: 300;
    --inset-box-shadow-highlight: 0 0 0;
    --inset-box-shadow-lowlight: 255 255 255;
    --outset-box-shadow-highlght: 255 255 255;
    --outset-box-shadow-lowlight: 0 0 0;
}

:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) {
    --background: 212 212 216; /* theme('colors.zinc.300'); */
    --foreground: 3 7 18; /*theme('colors.gray.950');*/
    /*--lowlight: 250 250 250; !*theme('colors.zinc.50');*!*/
    --lowlight: 120 114 204; /*theme('colors.zinc.50');*/
    /*177, 175, 204*/
    --highlight: 30 27 75; /*theme('colors.indigo.950');*/
    --header-font-weight: 700;
    --body-font-weight: 500;
    --inset-box-shadow-highlight: 0 0 0;
    --inset-box-shadow-lowlight: 255 255 255;
    --outset-box-shadow-highlght: 0 0 0;
    --outset-box-shadow-lowlight: 0 0 0;
}

*, *::before, *::after {
    box-sizing: border-box;
    /*border: 2px solid red;*/
    @apply duration-200;
    @apply ease-in-out;
    transition-property: text-decoration-color;
}

html, body {
    padding: 0;
    margin: 0;
}

body {
    color: rgb(var(--foreground));
    background: rgb(var(--background));
    font-family: var(--font-body), sans-serif;
    font-weight: 300;
    @apply text-base;
    @apply tracking-wide;
    @apply leading-7;
    @apply antialiased;
}

h1, h2, h3, h4, h5, h6 {
    font-family: var(--font-header), sans-serif;
}

p {
    @apply my-4;
}

blockquote {
    @apply my-6;
    @apply pl-4;
    @apply border-l-4;
    @apply border-lowlight;
    @apply italic;
    color: rgba(var(--foreground), 0.8);
    font-style: italic;
}

ul, ol {
    @apply my-4;
    @apply pl-6;
}

li {
    @apply my-2;
}

.link-styles {
    @apply font-medium;
    @apply cursor-pointer;
    @apply decoration-dotted;
    @apply decoration-1;
    @apply underline-offset-4;
    @apply underline;
    color: rgb(var(--highlight));
    /*text-decoration-color: rgb(var(--lowlight));*/
    @apply transition-colors;
    @apply ease-in-out;
    @apply cursor-pointer;
}

.link-styles:hover, .link-styles:focus {
    color: rgb(var(--lowlight));
    text-decoration-color: rgb(var(--lowlight));
}

p {
    a {
        @apply link-styles;
    }
}

.primary-nav {
    a {
        @apply link-styles
    }

    /*a:hover, a:focus {*/
    /*    color: rgb(var(--lowlight));*/
    /*    text-decoration-color: rgb(var(--lowlight));*/
    /*}*/
}

hr {
    @apply border-dotted;
    @apply border-lowlight;
    @apply my-8;
}

/* Code blocks and syntax highlighting */
code {
    @apply font-mono;
    @apply text-sm;
    @apply px-1;
    @apply py-0.5;
    @apply rounded;
    background-color: rgba(var(--lowlight), 0.1);
    color: rgb(var(--highlight));
    font-weight: 500;
}

pre {
    @apply overflow-x-auto;
    @apply rounded-lg;
    @apply p-4;
    @apply my-6;
    @apply text-sm;
    @apply leading-relaxed;
    background-color: rgba(var(--foreground), 0.05);
    border: 1px solid rgba(var(--lowlight), 0.2);
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
}

pre code {
    @apply p-0;
    @apply bg-transparent;
    @apply text-inherit;
    @apply rounded-none;
    font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', 'Consolas', monospace;
    font-weight: 400;
    line-height: 1.6;
}

/* Prism.js syntax highlighting theme - Enhanced for C/C++ macros */
.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
    color: #7c7c7c;
    font-style: italic;
}

.token.punctuation {
    color: #c5c8c6;
}

.token.property,
.token.tag,
.token.constant,
.token.symbol,
.token.deleted {
    color: #e06c75;
}

.token.boolean,
.token.number {
    color: #d19a66;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
    color: #98c379;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string,
.token.variable {
    color: #56b6c2;
}

.token.atrule,
.token.attr-value,
.token.function,
.token.class-name {
    color: #61afef;
}

.token.keyword {
    color: #c678dd;
    font-weight: 600;
}

.token.regex,
.token.important {
    color: #be5046;
}

.token.important,
.token.bold {
    font-weight: bold;
}

.token.italic {
    font-style: italic;
}

.token.entity {
    cursor: help;
}

/* Enhanced C/C++ preprocessor and macro highlighting */
.token.macro,
.token.directive {
    color: #e5c07b !important;
    font-weight: 500;
    text-shadow: 0 0 2px rgba(229, 192, 123, 0.3);
}

.token.directive-hash {
    color: #e5c07b !important;
    font-weight: 500;
}

/* Specific macro keywords */
.language-c .token.directive.keyword,
.language-cpp .token.directive.keyword {
    color: #ff7b72 !important;
    font-weight: 500;
}

/* #define, #if, #ifdef, etc. */
.language-c .token.keyword.directive,
.language-cpp .token.keyword.directive {
    color: #ff7b72 !important;
    font-weight: 500;
}

/* Macro parameters and content */
.language-c .token.macro-name,
.language-cpp .token.macro-name {
    color: #ffa657 !important;
    font-weight: 500;
}

/* Backslash line continuations in macros */
.language-c .token.punctuation.important,
.language-cpp .token.punctuation.important {
    color: #ff7b72;
    font-weight: bold;
}

/* Rust specific highlighting */
.language-rust .token.lifetime,
.language-rust .token.attribute {
    color: #f39c12;
}

.language-rust .token.macro {
    color: #e74c3c;
    font-weight: 600;
}

/* Light theme syntax highlighting adjustments */
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) {
    /* Light theme code adjustments */
}

:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) pre {
    background-color: rgba(var(--background), 0.05);
    border-color: rgba(var(--lowlight), 0.3);
}

:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) code {
    background-color: rgba(var(--lowlight), 0.15);
}

/* Light theme token colors - all with !important for proper overrides */
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.comment,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.prolog,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.doctype,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.cdata {
    color: #6a737d !important;
}

:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.punctuation {
    color: #24292e !important;
}

:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.property,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.tag,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.constant,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.symbol {
    color: #d73a49 !important;
}

:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.boolean,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.number {
    color: #0969da !important;
}

:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.string,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.char {
    color: #0a3069 !important;
}

:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.keyword {
    color: #cf222e !important;
    font-weight: 600;
}

:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.function,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.class-name {
    color: #8250df !important;
}

:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.operator,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.entity,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.url,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .language-css .token.string,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .style .token.string,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.variable {
    color: #1f2328 !important;
}

/* Light theme macro highlighting - much darker for better readability */
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.macro,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.directive {
    color: #8b3500 !important;
    font-weight: 500;
    text-shadow: none;
}

:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .language-c .token.directive.keyword,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .language-cpp .token.directive.keyword,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .language-c .token.keyword.directive,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .language-cpp .token.keyword.directive {
    color: #d73a49 !important;
    font-weight: 500;
}

/* Light theme macro-name fix - override the bright orange */
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .language-c .token.macro-name,
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .language-cpp .token.macro-name {
    color: #7c3500 !important;
    font-weight: 500;
}

/* Light theme directive-hash fix - override the bright yellow */
:root:has(#theme-toggle-button>input[type="checkbox"]:not(:checked)) .token.directive-hash {
    color: #8b3500 !important;
    font-weight: 500;
}

/* Language label styling */
pre[class*="language-"]::before {
    content: attr(class);
    position: absolute;
    top: 0;
    right: 0;
    background: rgba(var(--lowlight), 0.8);
    color: rgb(var(--background));
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    border-bottom-left-radius: 0.375rem;
    border-top-right-radius: 0.5rem;
}

pre[class*="language-"] {
    position: relative;
}

/* Specific language labels */
pre.language-c::before { content: "C"; }
pre.language-cpp::before { content: "C++"; }
pre.language-rust::before { content: "Rust"; }
pre.language-javascript::before { content: "JavaScript"; }
pre.language-typescript::before { content: "TypeScript"; }
pre.language-bash::before { content: "Bash"; }
pre.language-yaml::before { content: "YAML"; }
pre.language-json::before { content: "JSON"; }

/* Improve scrollbar styling */
pre::-webkit-scrollbar {
    height: 8px;
}

pre::-webkit-scrollbar-track {
    background: rgba(var(--background), 0.3);
    border-radius: 4px;
}

pre::-webkit-scrollbar-thumb {
    background: rgba(var(--lowlight), 0.5);
    border-radius: 4px;
}

pre::-webkit-scrollbar-thumb:hover {
    background: rgba(var(--lowlight), 0.7);
}